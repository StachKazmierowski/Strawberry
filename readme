We run program with following command
python3 main.py $troopsANo $troopsBNo $battlefieldsNo $steps_number $phi $threads_number
First three parameters are necessary, next three are optional (default values can be found in src/utils.py)

Script run.sh is an example of script used to run program for many values.

After starting, the program checks if payoff matrix for this model was already found (in /payoff_matrices).
If so, it reads payoff matrix from memory and uses it. Otherwise it first finds the matrix, than pass to the MWU algorithm.

The output of program are following files:
payoff_matrix($A,$B,$n).csv - file with payoff matrix (pandas)
payoff_matrix_report($A,$B,$n).csv - file with information about payoff matrix generation (when, with hom many threads, how long)
results($A,$B,$n) - directory with algorithm results, containing ($x in {A,B} means the player):
	$x_value - game value for $x player
	$x_strategy.csv - found strategy of $x player
	$x_marginal_distribution - marginal distribution of found strategy of player $x
	$x_epsilon_value.txt - epsilon value (how much could player $x increase his payoff without changing strategy of the other player)
	report.txt - report from running algorithm (when, how long, what parameters)


Required libraries:
numpy, pandas, time, datetime, os, concurrent.futures, math, scipy.special, sys
Installing command:
pip3 install numpy, pandas, time, datetime, os, concurrent.futures, math, scipy.special, sys
